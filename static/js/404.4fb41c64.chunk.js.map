{"version":3,"file":"static/js/404.4fb41c64.chunk.js","mappings":"mOAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,gbAyBVE,GAAWF,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,6d,2FCkBrB,UArCqB,WACnB,IAAMG,GAAWC,EAAAA,EAAAA,MAajB,OACE,SAAC,KAAD,CAAQC,SANW,SAACC,EAAD,GAAmE,IAA5CC,EAA2C,EAA3CA,UAC1CJ,GAASK,EAAAA,EAAAA,IAAcF,IACvBC,KAIgCE,cAZA,CAChCC,KAAM,GACNC,MAAO,GACPC,SAAU,IASV,UACE,UAAC,IAAD,YACE,8BACE,sCACA,SAAC,KAAD,CAAOC,KAAK,OAAOH,KAAK,OAAOI,UAAQ,QAGzC,8BACE,mCACA,SAAC,KAAD,CAAOD,KAAK,QAAQH,KAAK,QAAQI,UAAQ,QAG3C,8BACE,qCACA,SAAC,KAAD,CAAOD,KAAK,WAAWH,KAAK,WAAWI,UAAQ,QAEjD,mBAAQD,KAAK,SAAb","sources":["components/Contact form/ContactForm.styled.ts","views/RegisterView.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  margin-top: 32px;\n  border: solid 2px lightgray;\n  border-radius: 15px;\n  width: 300px;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  padding: 20px;\n\n  label {\n    text-align: center;\n  }\n\n  button {\n    width: 100px;\n    padding: 5px 10px;\n    border: none;\n    border-radius: 15px;\n    background-color: #ffffff;\n    cursor: pointer;\n    margin-top: 15px;\n  }\n`;\n\nexport const EditForm = styled(Form)`\n  position: relative;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  input {\n    width: 100%;\n  }\n\n  .submit-btn {\n    width: 100px;\n    padding: 5px 10px;\n    border: none;\n    border-radius: 15px;\n    background-color: #ffffff;\n    cursor: pointer;\n    margin-top: 15px;\n    color: black;\n    margin: 15px auto 0 auto;\n  }\n  .close-btn {\n    position: absolute;\n    top: 5px;\n    right: 5px;\n    padding: 0;\n  }\n`;\n","import { StyledForm } from 'components/Contact form/ContactForm.styled';\nimport { Formik, Field, FormikHelpers } from 'formik';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { registerQuery } from 'redux/auth/authOperations';\nimport { AppDispatch } from 'redux/store';\nimport { ISignUpData } from 'types/types';\n\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const initialValues:ISignUpData = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  const handleSubmit = (values:ISignUpData, { resetForm }:FormikHelpers<ISignUpData>) => {\n    dispatch(registerQuery(values));\n    resetForm();\n  };\n\n  return (\n    <Formik onSubmit={handleSubmit} initialValues={initialValues}>\n      <StyledForm>\n        <label>\n          <p>User Name</p>\n          <Field type=\"text\" name=\"name\" required />\n        </label>\n\n        <label>\n          <p>e-mail</p>\n          <Field type=\"email\" name=\"email\" required />\n        </label>\n\n        <label>\n          <p>Password</p>\n          <Field type=\"password\" name=\"password\" required />\n        </label>\n        <button type=\"submit\">Sign up</button>\n      </StyledForm>\n    </Formik>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["StyledForm","styled","Form","EditForm","dispatch","useDispatch","onSubmit","values","resetForm","registerQuery","initialValues","name","email","password","type","required"],"sourceRoot":""}