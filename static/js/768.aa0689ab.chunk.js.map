{"version":3,"file":"static/js/768.aa0689ab.chunk.js","mappings":"mOAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,gbAyBVE,GAAWF,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,6d,2FCUrB,UA9BkB,WAChB,IAAMG,GAAWC,EAAAA,EAAAA,MAWjB,OACE,SAAC,KAAD,CAAQC,SANW,SAACC,EAAD,GAAiE,IAA3CC,EAA0C,EAA1CA,UACzCJ,GAASK,EAAAA,EAAAA,IAAWF,IACpBC,KAIgCE,cAXD,CAC/BC,MAAO,GACPC,SAAU,IASV,UACE,UAAC,IAAD,YACE,8BACE,mCACA,SAAC,KAAD,CAAOC,KAAK,QAAQC,KAAK,QAAQC,UAAQ,QAG3C,8BACE,qCACA,SAAC,KAAD,CAAOF,KAAK,WAAWC,KAAK,WAAWC,UAAQ,QAEjD,mBAAQF,KAAK,SAAb","sources":["components/Contact form/ContactForm.styled.ts","views/LoginView.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  margin-top: 32px;\n  border: solid 2px lightgray;\n  border-radius: 15px;\n  width: 300px;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  padding: 20px;\n\n  label {\n    text-align: center;\n  }\n\n  button {\n    width: 100px;\n    padding: 5px 10px;\n    border: none;\n    border-radius: 15px;\n    background-color: #ffffff;\n    cursor: pointer;\n    margin-top: 15px;\n  }\n`;\n\nexport const EditForm = styled(Form)`\n  position: relative;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  input {\n    width: 100%;\n  }\n\n  .submit-btn {\n    width: 100px;\n    padding: 5px 10px;\n    border: none;\n    border-radius: 15px;\n    background-color: #ffffff;\n    cursor: pointer;\n    margin-top: 15px;\n    color: black;\n    margin: 15px auto 0 auto;\n  }\n  .close-btn {\n    position: absolute;\n    top: 5px;\n    right: 5px;\n    padding: 0;\n  }\n`;\n","import { StyledForm } from 'components/Contact form/ContactForm.styled';\nimport { Formik, Field, FormikHelpers } from 'formik';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { loginQuery } from 'redux/auth/authOperations';\nimport { AppDispatch } from 'redux/store';\nimport { ILoginData } from 'types/types';\n\nconst LoginPage = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const initialValues:ILoginData = {\n    email: '',\n    password: '',\n  };\n\n  const handleSubmit = (values:ILoginData, { resetForm }:FormikHelpers<ILoginData>) => {\n    dispatch(loginQuery(values));\n    resetForm();\n  };\n\n  return (\n    <Formik onSubmit={handleSubmit} initialValues={initialValues}>\n      <StyledForm>\n        <label>\n          <p>e-mail</p>\n          <Field type=\"email\" name=\"email\" required />\n        </label>\n\n        <label>\n          <p>Password</p>\n          <Field type=\"password\" name=\"password\" required />\n        </label>\n        <button type=\"submit\">Log in</button>\n      </StyledForm>\n    </Formik>\n  );\n};\n\nexport default LoginPage;\n"],"names":["StyledForm","styled","Form","EditForm","dispatch","useDispatch","onSubmit","values","resetForm","loginQuery","initialValues","email","password","type","name","required"],"sourceRoot":""}