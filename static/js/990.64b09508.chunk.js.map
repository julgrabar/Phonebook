{"version":3,"file":"static/js/990.64b09508.chunk.js","mappings":"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","sources":["components/Contact form/ContactForm.styled.jsx","redux/contacts/contactsSelectors.js","components/Contact form/ContactForm.jsx","components/Contact item/ContactsItem.jsx","components/Contact list/ContactsList.styled.jsx","components/Contact list/ContactList.jsx","components/Filter/Filter.jsx","components/Loader/Loader.stayled.jsx","views/ContactsView.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  margin-top: 32px;\n  border: solid 2px lightgray;\n  border-radius: 15px;\n  width: 300px;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  padding: 20px;\n\n  label {\n    text-align: center;\n  }\n\n  button {\n    width: 100px;\n    padding: 5px 10px;\n    border: none;\n    border-radius: 15px;\n    background-color: #ffffff;\n    cursor: pointer;\n    margin-top: 15px;\n  }\n`;\n","export const getContacts = state => state.contacts.items;\nexport const getIsLoading = state => state.isLoading;\nexport const getFilterValue = state => state.contacts.filter;","import { Formik, Field } from 'formik';\nimport { StyledForm } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContactRequest } from 'redux/contacts/contactsOperations';\nimport { getContacts } from 'redux/contacts/contactsSelectors';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    name: '',\n    number: '',\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    addNewContact(values);\n    resetForm();\n  };\n\n  const addNewContact = ({ name, number }) => {\n    if (\n      contacts.map(item => item.name.toLowerCase()).includes(name.toLowerCase())\n    ) {\n      alert(`${name} is Already in contacts`);\n      return;\n    }\n\n    const contact = {\n      name,\n      number,\n    };\n\n    dispatch(addContactRequest(contact));\n  };\n\n  return (\n    <Formik onSubmit={handleSubmit} initialValues={initialValues}>\n      <StyledForm>\n        <label>\n          <p>Name</p>\n          <Field\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n\n        <label>\n          <p>Number</p>\n          <Field\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContactRequest } from 'redux/contacts/contactsOperations';\n\nexport const ContactsItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <li>\n      <span>\n        {name}: {number}\n      </span>\n      <button\n        type=\"button\"\n        className=\"delete-btn\"\n        onClick={() => dispatch(deleteContactRequest(id))}\n      >\n        <span className=\"material-icons\">delete</span>\n      </button>\n    </li>\n  );\n};\n\nContactsItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n  width: 100%;\n  li {\n    display: flex;\n    align-items: center;\n    border: solid white 1px;\n    padding: 20px;\n    border-radius: 10px;\n  }\n\n  li:not(:last-child) {\n    margin-bottom: 10px;\n  }\n\n  button {\n    background-color: #fff;\n    border-radius: 20px;\n    border: none;\n    background-color: darkred;\n    color: white;\n    cursor: pointer;\n    margin-left: auto;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { ContactsItem } from 'components/Contact item/ContactsItem';\nimport { List } from './ContactsList.styled';\n\nexport const ContactList = ({ contacts }) => {\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => (\n        <ContactsItem key={id} id={id} name={name} number={number} />\n      ))}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  constacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/contacts/contactsSlice';\nimport { getFilterValue } from 'redux/contacts/contactsSelectors';\n\nexport const Filter = () => {\n  const filterValue = useSelector(getFilterValue);\n  const dispatch = useDispatch();\n\n  const onFilterInput = e => {\n    dispatch(filterContacts(e.currentTarget.value));\n  };\n\n  return (\n    <>\n      <p>Find contacts by name:</p>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filterValue}\n        onChange={onFilterInput}\n        className=\"filter\"\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Loader = styled.div`\n  margin: ${props => props.margin ?? '0 auto'};\n  font-size: 10px;\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  background: #ffffff;\n  background: -moz-linear-gradient(\n    left,\n    #ffffff 10%,\n    rgba(255, 255, 255, 0) 42%\n  );\n  background: -webkit-linear-gradient(\n    left,\n    #ffffff 10%,\n    rgba(255, 255, 255, 0) 42%\n  );\n  background: -o-linear-gradient(left, #ffffff 10%, rgba(255, 255, 255, 0) 42%);\n  background: -ms-linear-gradient(\n    left,\n    #ffffff 10%,\n    rgba(255, 255, 255, 0) 42%\n  );\n  background: linear-gradient(\n    to right,\n    #ffffff 10%,\n    rgba(255, 255, 255, 0) 42%\n  );\n  position: relative;\n  -webkit-animation: load3 1.4s infinite linear;\n  animation: load3 1.4s infinite linear;\n  -webkit-transform: translateZ(0);\n  -ms-transform: translateZ(0);\n  transform: translateZ(0);\n\n  :before {\n    width: 50%;\n    height: 50%;\n    background: #ffffff;\n    border-radius: 100% 0 0 0;\n    position: absolute;\n    top: 0;\n    left: 0;\n    content: '';\n  }\n  :after {\n    background: #000066;\n    width: 75%;\n    height: 75%;\n    border-radius: 50%;\n    content: '';\n    margin: auto;\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n  }\n  @-webkit-keyframes load3 {\n    0% {\n      -webkit-transform: rotate(0deg);\n      transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n  @keyframes load3 {\n    0% {\n      -webkit-transform: rotate(0deg);\n      transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import { ContactForm } from 'components/Contact form/ContactForm';\nimport { ContactList } from 'components/Contact list/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Container } from 'components/Global';\nimport { Loader } from 'components/Loader/Loader.stayled';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContactsNames } from 'redux/contacts/contactsOperations';\nimport {\n  getFilterValue,\n  getContacts,\n  getIsLoading,\n} from 'redux/contacts/contactsSelectors';\n\nconst ContactsPage = () => {\n  const contacts = useSelector(getContacts);\n  const filterValue = useSelector(getFilterValue);\n  const isLoading = useSelector(getIsLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContactsNames());\n  }, [dispatch]);\n\n  const findPhones = () => {\n    const normalizedValue = filterValue.toLowerCase();\n    const filteredArray = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedValue)\n    );\n    return filteredArray;\n  };\n\n  return (\n    <Container>\n      <ContactForm />\n\n      {contacts && contacts.length > 0 && (\n        <>\n          <Filter />\n          <ContactList contacts={findPhones()} />\n        </>\n      )}\n      {isLoading && <Loader />}\n    </Container>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["StyledForm","styled","Form","getContacts","state","contacts","items","getIsLoading","isLoading","getFilterValue","filter","ContactForm","useSelector","dispatch","useDispatch","addNewContact","name","number","map","item","toLowerCase","includes","alert","contact","addContactRequest","onSubmit","values","resetForm","initialValues","type","pattern","title","required","ContactsItem","id","className","onClick","deleteContactRequest","List","ContactList","Filter","filterValue","value","onChange","e","filterContacts","currentTarget","Loader","props","margin","useEffect","fetchContactsNames","length","normalizedValue","findPhones"],"sourceRoot":""}